/*** BNFC-Generated Visitor Traversal Skeleton. ***/
/* This traverses the abstract syntax tree.
   To use, copy Skeleton.h and Skeleton.c to
   new files. */

#include <stdio.h>
#include <stdlib.h>
#include "Skeleton.h"
#include "symbols.h"
//#include "Config.h"

void visitZapZloz(ZapZloz _p_)
{
    visitListZapytanie(_p_->listzapytanie_);
}

void visitZapytanie(Zapytanie _p_)
{
  switch(_p_->kind)
  {
  case is_ZapProste:
    /* Code for ZapProste Goes Here */
    break;
  case is_ZapDef:
    /* Code for ZapDef Goes Here */
    visitZapytanie(_p_->u.zapdef_.zapytanie_);
    visitNazwa(_p_->u.zapdef_.nazwa_);
    break;
  case is_ZapWyw:
    /* Code for ZapWyw Goes Here */
    visitZapytanie(_p_->u.zapwyw_.zapytanie_);
    visitNazwa(_p_->u.zapwyw_.nazwa_);
    break;
  case is_ZapPuste:
    /* Code for ZapPuste Goes Here */
    break;

  default:
    fprintf(stderr, "Error: bad kind field when printing Zapytanie!\n");
    exit(1);
  }
}

void visitLiniaZapytania(LiniaZapytania _p_)
{

    /* Code for LiniaZap Goes Here */
    visitNazwaPola(_p_->ident_);
    visitWyraz(_p_->wyraz_);

}

void visitWyraz(Wyraz _p_)
{
  switch(_p_->kind)
  {
  case is_WyrazAnd:
    /* Code for WyrazAnd Goes Here */
    visitWyraz(_p_->u.wyrazand_.wyraz_1);
    visitWyraz(_p_->u.wyrazand_.wyraz_2);
    break;
  case is_WyrazOr:
    /* Code for WyrazOr Goes Here */
    visitWyraz(_p_->u.wyrazor_.wyraz_1);
    visitWyraz(_p_->u.wyrazor_.wyraz_2);
    break;
  case is_WyrazNeg:
    /* Code for WyrazNeg Goes Here */
    visitWyraz(_p_->u.wyrazneg_.wyraz_);
    break;
  case is_WyrazFrag:
    /* Code for WyrazFrag Goes Here */
    visitTekst(_p_->u.wyrazfrag_.tekst_1);
    visitTekst(_p_->u.wyrazfrag_.tekst_2);
    break;
  case is_WyrazFragL:
    /* Code for WyrazFragL Goes Here */
    visitTekst(_p_->u.wyrazfragl_.tekst_);
    break;
  case is_WyrazFragP:
    /* Code for WyrazFragP Goes Here */
    visitTekst(_p_->u.wyrazfragp_.tekst_);
    break;
  case is_WyrazTekst:
    /* Code for WyrazTekst Goes Here */
    visitTekst(_p_->u.wyraztekst_.tekst_);
    break;

  default:
    fprintf(stderr, "Error: bad kind field when printing Wyraz!\n");
    exit(1);
  }
}

void visitListZapytanie(ListZapytanie listzapytanie)
{
  while(listzapytanie != 0)
  {
    /* Code For ListZapytanie Goes Here */
    visitZapytanie(listzapytanie->zapytanie_);
    listzapytanie = listzapytanie->listzapytanie_;
  }
}

void visitListLiniaZapytania(ListLiniaZapytania listliniazapytania)
{
  while(listliniazapytania != 0)
  {
    /* Code For ListLiniaZapytania Goes Here */
    visitLiniaZapytania(listliniazapytania->liniazapytania_);
    listliniazapytania = listliniazapytania->listliniazapytania_;
  }
}

void visitTekst(Tekst _p_)
{

}

void visitNazwa(Nazwa _p_)
{

}

void visitMytoken(MyToken p)
{
  /* Code for MyToken Goes Here */
}
void visitIdent(Ident i)
{
  /* Code for Ident Goes Here */
}

void visitNazwaPola(Ident i)
{
  if(symbols_is_NazwaPola(i)) fprintf(stderr, "Error: %s nie jest nazwÄ… pola\n", symbols_get_name(i));
}

void visitInteger(Integer i)
{
  /* Code for Integer Goes Here */
}
void visitDouble(Double d)
{
  /* Code for Double Goes Here */
}
void visitChar(Char c)
{
  /* Code for Char Goes Here */
}
void visitString(String s)
{
  /* Code for String Goes Here */
}

