/* This Bison file was machine-generated by BNFC */
%{
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "Absyn.h"
#define initialize_lexer TQL_initialize_lexer
extern int yyparse(void);
extern int yylex(void);
extern int initialize_lexer(FILE * inp);
void yyerror(const char *str)
{
  fprintf(stderr,"error: %s\n",str);
}

ZapZloz YY_RESULT_ZapZloz_ = 0;
ZapZloz pZapZloz(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ZapZloz_;
  }
}

Zapytanie YY_RESULT_Zapytanie_ = 0;
Zapytanie pZapytanie(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Zapytanie_;
  }
}

LiniaZapytania YY_RESULT_LiniaZapytania_ = 0;
LiniaZapytania pLiniaZapytania(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_LiniaZapytania_;
  }
}

Wyraz YY_RESULT_Wyraz_ = 0;
Wyraz pWyraz(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Wyraz_;
  }
}

ListZapytanie YY_RESULT_ListZapytanie_ = 0;
ListZapytanie pListZapytanie(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListZapytanie_;
  }
}

ListLiniaZapytania YY_RESULT_ListLiniaZapytania_ = 0;
ListLiniaZapytania pListLiniaZapytania(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListLiniaZapytania_;
  }
}

int YY_RESULT_Przerwa_ = 0;
int pPrzerwa(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Przerwa_;
  }
}

ListPrzerwa YY_RESULT_ListPrzerwa_ = 0;
ListPrzerwa pListPrzerwa(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListPrzerwa_;
  }
}

Tekst YY_RESULT_Tekst_ = 0;
Tekst pTekst(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Tekst_;
  }
}

Nazwa YY_RESULT_Nazwa_ = 0;
Nazwa pNazwa(FILE *inp)
{
  initialize_lexer(inp);
  if (yyparse())
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Nazwa_;
  }
}


ListZapytanie reverseListZapytanie(ListZapytanie l)
{
  ListZapytanie prev = 0;
  ListZapytanie tmp = 0;
  while (l)
  {
    tmp = l->listzapytanie_;
    l->listzapytanie_ = prev;
    prev = l;
    l = tmp;
  }
  return prev;
}
ListLiniaZapytania reverseListLiniaZapytania(ListLiniaZapytania l)
{
  ListLiniaZapytania prev = 0;
  ListLiniaZapytania tmp = 0;
  while (l)
  {
    tmp = l->listliniazapytania_;
    l->listliniazapytania_ = prev;
    prev = l;
    l = tmp;
  }
  return prev;
}
ListPrzerwa reverseListPrzerwa(ListPrzerwa l)
{
  ListPrzerwa prev = 0;
  ListPrzerwa tmp = 0;
  while (l)
  {
    tmp = l->listprzerwa_;
    l->listprzerwa_ = prev;
    prev = l;
    l = tmp;
  }
  return prev;
}

%}

%union
{
  int int_;
  char char_;
  double double_;
  char* string_;
  ZapZloz zapzloz_;
  Zapytanie zapytanie_;
  LiniaZapytania liniazapytania_;
  Wyraz wyraz_;
  ListZapytanie listzapytanie_;
  ListLiniaZapytania listliniazapytania_;
  int przerwa_;
  ListPrzerwa listprzerwa_;
  Tekst tekst_;
  Nazwa nazwa_;

}

%token _ERROR_
%token _SYMB_NEWLINE    /*   \n   */
%token _SYMB_DWUKROPEK    /*   :   */
%token _SYMB_AND    /*   +   */
%token _SYMB_OR    /*   /   */
%token _SYMB_NOT    /*   --   */
%token _SYMB_ALL    /*   *   */
%token _SYMB_LEWIAS    /*   (   */
%token _SYMB_PRAWIAS    /*   )   */
%token _SYMB_AS    /*   as   */
%token _SYMB_DEFINE    /*   define   */
%token _SYMB_IN    /*   in   */
%token _SYMB_SEARCH    /*   search   */
%token<string_> _SYMB_DWUKROPEK2    /*   MyToken   */

%type <zapzloz_> ZapZloz
%type <zapytanie_> Zapytanie
%type <liniazapytania_> LiniaZapytania
%type <wyraz_> Wyraz
%type <wyraz_> Wyraz1
%type <wyraz_> Wyraz2
%type <listzapytanie_> ListZapytanie
%type <listliniazapytania_> ListLiniaZapytania
%type <przerwa_> Przerwa
%type <listprzerwa_> ListPrzerwa
%type <tekst_> Tekst
%type <nazwa_> Nazwa

%token<string_> _STRING_
%token<string_> _IDENT_

%%
ZapZloz : ListZapytanie { $$ = make_ZapZloz($1); YY_RESULT_ZapZloz_= $$; } 
;
Zapytanie : ListLiniaZapytania ListPrzerwa { $$ = make_ZapProste($1, reverseListPrzerwa($2)); YY_RESULT_Zapytanie_= $$; } 
  | _SYMB_DEFINE _SYMB_NEWLINE Zapytanie _SYMB_AS Nazwa ListPrzerwa { $$ = make_ZapDef($3, $5, reverseListPrzerwa($6)); YY_RESULT_Zapytanie_= $$; }
  | _SYMB_SEARCH _SYMB_NEWLINE Zapytanie _SYMB_IN Nazwa ListPrzerwa { $$ = make_ZapWyw($3, $5, reverseListPrzerwa($6)); YY_RESULT_Zapytanie_= $$; }
  | ListPrzerwa { $$ = make_ZapPuste(reverseListPrzerwa($1)); YY_RESULT_Zapytanie_= $$; }
;
LiniaZapytania : _IDENT_ _SYMB_DWUKROPEK Wyraz { $$ = make_LiniaZap($1, $3); YY_RESULT_LiniaZapytania_= $$; } 
;
Wyraz : Wyraz _SYMB_AND Wyraz1 { $$ = make_WyrazAnd($1, $3); YY_RESULT_Wyraz_= $$; } 
  | Wyraz _SYMB_OR Wyraz1 { $$ = make_WyrazOr($1, $3); YY_RESULT_Wyraz_= $$; }
  | Wyraz _SYMB_NOT Wyraz1 { $$ = make_WyrazAnd($1, make_WyrazNeg($3)); YY_RESULT_Wyraz_= $$; }
  | Wyraz1 { $$ = $1; YY_RESULT_Wyraz_= $$; }
;
Wyraz1 : _SYMB_NOT Wyraz1 { $$ = make_WyrazNeg($2); YY_RESULT_Wyraz_= $$; } 
  | Wyraz2 { $$ = $1; YY_RESULT_Wyraz_= $$; }
;
Wyraz2 : Tekst _SYMB_ALL Tekst { $$ = make_WyrazFrag($1, $3); YY_RESULT_Wyraz_= $$; } 
  | Tekst _SYMB_ALL { $$ = make_WyrazFragL($1); YY_RESULT_Wyraz_= $$; }
  | _SYMB_ALL Tekst { $$ = make_WyrazFragP($2); YY_RESULT_Wyraz_= $$; }
  | Tekst { $$ = make_WyrazTekst($1); YY_RESULT_Wyraz_= $$; }
  | _SYMB_LEWIAS Wyraz _SYMB_PRAWIAS { $$ = $2; YY_RESULT_Wyraz_= $$; }
;
ListZapytanie : Zapytanie { $$ = make_ListZapytanie($1, 0); YY_RESULT_ListZapytanie_= $$; } 
  | Zapytanie ListZapytanie { $$ = make_ListZapytanie($1, $2); YY_RESULT_ListZapytanie_= $$; }
;
ListLiniaZapytania : LiniaZapytania _SYMB_NEWLINE { $$ = make_ListLiniaZapytania($1, 0); YY_RESULT_ListLiniaZapytania_= $$; } 
  | LiniaZapytania _SYMB_NEWLINE ListLiniaZapytania { $$ = make_ListLiniaZapytania($1, $3); YY_RESULT_ListLiniaZapytania_= $$; }
;
Przerwa : _SYMB_NEWLINE { $$ = 1; YY_RESULT_Przerwa_= $$; } 
;
ListPrzerwa : /* empty */ { $$ = 0; YY_RESULT_ListPrzerwa_= $$; } 
  | ListPrzerwa Przerwa { $$ = make_ListPrzerwa($2, $1); YY_RESULT_ListPrzerwa_= $$; }
;
Tekst : _STRING_ { $$ = make_Tekst($1); YY_RESULT_Tekst_= $$; } 
  | _IDENT_ { $$ = make_Tekst($1); YY_RESULT_Tekst_= $$; }
  | _SYMB_DWUKROPEK2 { $$ = make_Tekst($1); YY_RESULT_Tekst_= $$; }
;
Nazwa : _STRING_ { $$ = make_Nazwa($1); YY_RESULT_Nazwa_= $$; } 
;

