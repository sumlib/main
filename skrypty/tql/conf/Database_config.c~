#include "Database_config.h"
#include <stdlib.h>
#include <stdio.h>
#include "../Cexplode.h"

#define MAX_LINE_SIZE 64
#define CONFIG_FILE "database.conf"
#define DB_HOST "DB_HOST"
#define DB_PORT "DB_PORT"
#define DB_NAME "DB_NAME"
#define DB_USER "DB_USER"
#define DB_PASS "DB_PASS"

typedef struct {
    char* name;
    char* host;
    char* port;
    char* user;
    char* pass;
} db_config; 


db_config parseConfigFile() {
    FILE* f = fopen(CONFIG_FILE, "r");
    char* line;
    CexplodeStrings strings;
    db_config dbc;
/*    dbc.name = "";
    dbc.host = "";
    dbc.port = "";
    dbc.user = "";
    dbc.pass = "";*/
    
    while (! feof(f)) {
	line = fgets(line, MAX_LINE_SIZE,f);
// 	if(0>Cexplode(line,"=",&strings) || strings.amnt != 2)
// 	{
// 	    printf("CexplodeFailed!\n");
// 	    return dbc;
// 	}
// 	if (strcmp(strings.strings[0], DB_NAME) == 0) {
// 	    dbc.name=strdup(strings.strings[1]);
// 	} else if (strcmp(strings.strings[0], DB_HOST) == 0) {
// 	    dbc.host=strdup(strings.strings[1]);
// 	} else if (strcmp(strings.strings[0], DB_PORT) == 0) {
// 	    dbc.port=strdup(strings.strings[1]);
// 	} else if (strcmp(strings.strings[0], DB_USER) == 0) {
// 	    dbc.user=strdup(strings.strings[1]);
// 	} else if (strcmp(strings.strings[0], DB_PASS) == 0) {
// 	    dbc.pass=strdup(strings.strings[1]);
// 	}
    }
    
   // printf("host: %s\nname: %s\nport: %s\nuser: %s\npass: %s\n", dbc.host, dbc.name, dbc.port, dbc.user, dbc.pass);
    
    return dbc;
    
}

Tablet* getTablets(char* query){

    db_config dbc = parseConfigFile();

    return NULL;
    
}



/*
PGconn *PQsetdbLogin(const char *pghost,
                     const char *pgport,
                     const char *pgoptions,
                     const char *pgtty,
                     const char *dbName,
                     const char *login,
                     const char *pwd);
		     */