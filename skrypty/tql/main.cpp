/*** Compiler Front-End Test automatically generated by the BNF Converter ***/
/*                                                                          */
/* This test will parse a file, print the abstract syntax tree, and then    */
/* pretty-print the result.                                                 */
/*                                                                          */
/****************************************************************************/

#include <stdio.h>
#include <stdlib.h>

#include "Parser.h"
#include "Translator.h"
#include "Absyn.h"
#include "Context.h"
#include "conf/Translator_config.h"
#include "Database.h"

int main(int argc, char ** argv)
{
  FILE *input;
  ComplexQuery parse_tree;
  int i;
  if (argc > 1) 
  {
    input = fopen(argv[1], "r");
    if (!input)
    {
      fprintf(stderr, "Error opening input file.\n");
      exit(1);
    }
  }
  else input = stdin;
  /* The default entry point is used. For other options see Parser.h */
  parse_tree = pComplexQuery(input);
  if (parse_tree)
  {
    contextComplexQuery(parse_tree);
    //getXmlFromQuery(translateComplexQuery(parse_tree));
    char *query = translateComplexQuery(parse_tree);
//    printf("%s\n\n", query);
    printf("%s\n\n", getXmlFromQuery(query));
    //printf("%s\n\n", translateComplexQuery(parse_tree));

    return 0;
  }
  return 1;


}

