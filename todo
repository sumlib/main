+> testować gwiazdki
=> Zmienić tłumaczenie + -> zamienić where i podzapytanie na "Having count"


KONCEPCYJNE
=> zaimplementowac wyszukiwanie po klinach
=> parsowanie tagów w database_config.c

-> dodać muzeum??
  

PORZĄDKOWE
?> dalsze tłumaczenie nazw funkcji (zmiana nazw funkcji na takie jak na prezentacji)

=> ujednolicić nazewnictwo id_cdli

=> Źle się wrzucają "IM —"
=> lepsze wykrywanie uszkodzeń
=> przy wrzucaniu tabliczki do bazy trzeba sprawdzić czy ilość węzłów nie przekracza 9999 (-; (bo mamy tylko 5 cyfr na id_wezla)
=> wyszukiwanie po tagach

=> wrzucanie do bazy - co z numerem węzła "znaków specjalnych"? (koniec linii, tablet, seal, obverse itp)

?> usunąć @ z translatora

=> plik Translator_config.c - funkcja replace jest używana na zasadzie copy-paste - użyć poprawnie (-;
?> end of file dla inputu stdin
=> w skryptach pythonowych - wydzielić funkcje do bazy i używać tylko dobrego modułu do pg!!

=> komentarze w języku - spytać Stępnia co o tym myśli (-;

PRACA:
A> ładniejszy obrazek dziedziny problemu (co powinna zawierać tabliczka w wersji elektronicznej)
=> ładniejszy obrazek do pakietów
?> nazwa do wyszukiwania po klinach (cunetext??)
=> dodać zapytanie typu: search "zwierzaki" (bez zapytania w środku)
O> obrazek "po co?" -> strzałki?
?> zastanowić się co z xml-schema - atrybut symbol
+> zmienić pliki na cpp
A> poprzednie rozwiązania
O> podsumowanie

UWAGI DĄBROWSKIEGO:
Rozdział 2: rozszerzyć
Rozdział 3: być może wrzucić przed rozdział 1??
	"obrazek" model dziedziny -> modele danych => podpisy
		  TQL             -> SQL, XQuery?
	w ładnym obrazku brakowało jednego elementu - TQL-a
	

PRACA DOMOWA:
Ola:
  -> przeczytać dziedzinę problemu
  => obrazek "po co?" -> strzałki?
  -> napisać do cdli
  -> podsumowanie
Asia:
  -> przeczytać pojęcia
  => załatwić konto na postgresie i wrzucić tql-a
  -> ładniejszy obrazek dziedziny problemu (co powinna zawierać tabliczka w wersji elektronicznej)

